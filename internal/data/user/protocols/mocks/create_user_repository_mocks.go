// Code generated by MockGen. DO NOT EDIT.
// Source: create_user_repository.go

// Package mock_data_user_protocols is a generated GoMock package.
package mock_data_user_protocols

import (
	reflect "reflect"

	user "github.com/claudiomozer/muxgrpc/internal/domain/user"
	gomock "github.com/golang/mock/gomock"
)

// MockCreateUserRepository is a mock of CreateUserRepository interface.
type MockCreateUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCreateUserRepositoryMockRecorder
}

// MockCreateUserRepositoryMockRecorder is the mock recorder for MockCreateUserRepository.
type MockCreateUserRepositoryMockRecorder struct {
	mock *MockCreateUserRepository
}

// NewMockCreateUserRepository creates a new mock instance.
func NewMockCreateUserRepository(ctrl *gomock.Controller) *MockCreateUserRepository {
	mock := &MockCreateUserRepository{ctrl: ctrl}
	mock.recorder = &MockCreateUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateUserRepository) EXPECT() *MockCreateUserRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCreateUserRepository) Create(dto user.CreateUserUseCaseDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", dto)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCreateUserRepositoryMockRecorder) Create(dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateUserRepository)(nil).Create), dto)
}
